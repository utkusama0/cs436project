# filepath: c:\okul\cs436\project\cs436project\backend\api-gateway\nginx.conf
server {
    listen 8000;
    server_name localhost;
    
    # Enable CORS for all routes
    set $cors_origin '*';
    set $cors_methods 'GET, POST, PUT, DELETE, OPTIONS, HEAD';
    set $cors_headers 'Authorization, Content-Type, Accept, Origin, X-Requested-With, X-CSRF-Token, Cache-Control, Pragma';
    
    # Handle OPTIONS method for CORS preflight requests
    location /api/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' $cors_methods always;
            add_header 'Access-Control-Allow-Headers' $cors_headers always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000 always;  # 20 days
            add_header 'Content-Type' 'text/plain charset=UTF-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        
        # Direct root API calls appropriately
        try_files $uri @api_default;
    }
    
    # Default handler for API requests that don't match specific locations
    location @api_default {
        # Return a meaningful response for the API root
        return 200 '{"status":"API Gateway is running","endpoints":["/api/students/","/api/courses/","/api/grades/"]}';
        add_header Content-Type application/json;
    }
    
    # Student Service with trailing slash    
    location /api/students/ {
        proxy_pass http://student-service:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for normal responses
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' $cors_methods always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length' always;
    }
    
    # Student Service without trailing slash
    location = /api/students {
        return 301 $scheme://$host$request_uri/;
    }
    
    # Course Service with trailing slash
    location /api/courses/ {
        proxy_pass http://course-service:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for normal responses
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' $cors_methods always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length' always;    
    }
    
    # Course Service without trailing slash
    location = /api/courses {
        return 301 $scheme://$host$request_uri/;
    }
     # Grade Service with trailing slash
    location /api/grades/ {
        proxy_pass http://grade-service:8080/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for normal responses
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' $cors_methods always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length' always;
    }

    # Grade Service without trailing slash
    location = /api/grades {
        return 301 $scheme://$host$request_uri/;
    }
    
    # Frontend        
    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for normal responses
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' $cors_methods always;
        add_header 'Access-Control-Allow-Headers' $cors_headers always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length' always;
    }
}
